{"version":3,"sources":["Header/Header.js","Login/Login.js","UserItem/UserItem.js","Error/Error.js","FilterService/AgeFilterService.js","FilterService/NameFilterService.js","FilterService/NameSearch.js","UserList/UserList.js","App/App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","className","bg","variant","Brand","href","Collapse","Text","this","props","name","Component","UserItem","Card","gender","Title","Body","Img","src","image","age","city","country","Error","error","React","AgeFilterService","sortByYoungestAge","sort","a","b","dob","sortByOldestAge","ButtonGroup","aria-label","Button","onClick","handlerSort","users","NameFilterService","sortByLastNameUp","last","sortByLastNameDown","NameSearch","onNameSearch","event","handlerNameSearch","target","value","toLowerCase","type","onChange","UserList","getResource","fetch","then","data","json","setState","results","catch","err","hasError","state","length","i","first","includes","handlerUserReset","Container","fluid","Row","Col","xs","md","map","item","index","key","picture","large","toUpperCase","location","App","handleLogin","nameValue","loginValue","console","log","login","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f2c5df9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.css';\nimport { Navbar } from 'react-bootstrap';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <Navbar className='header' bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"unchor_is_valid\">Friends App</Navbar.Brand>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                    Signed in as: <a href=\"unchor_is_valid\">{this.props.name}</a>\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport './Login.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            login: false\n        };\n    }\n\n    setName = (event) => {\n        this.setState({ name: event.target.value})\n    }\n\n    onLogin = (event) => {\n        if(this.state.name !== '') {\n            this.setState({ login: true });\n            this.props.handleLogin(this.state.name, true);\n        } \n        else \n        {\n            alert('Please enter your name');\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <Container className=\"login-container\">\n                <Form className=\"login-form\" onSubmit={this.onLogin}>\n                    <Form.Group>\n                        <Form.Label>Enter your Name</Form.Label>\n                        <Form.Control\n                            onChange={this.setName}\n                            type=\"text\" placeholder=\"name\"/>\n                        <Button\n                            type=\"submit\" \n                            variant=\"primary\">\n                            Login\n                        </Button>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n    \n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './UserItem.css';\nimport { Card } from 'react-bootstrap';\n\nexport default class UserItem extends Component {\n    render() {\n        return (\n            <Card>\n                {this.props.gender === \"MALE\" \n                    ? <Card.Title className=\"card-title-male\"\n                    >{this.props.name}</Card.Title>\n                    : <Card.Title\n                    >{this.props.name}</Card.Title>\n                }\n                <Card.Body>\n                    <Card.Img variant=\"top\" src={this.props.image} />\n                    <Card.Text>{this.props.gender}</Card.Text>\n                    <Card.Text>{this.props.age}</Card.Text>\n                    <Card.Text>{this.props.city}</Card.Text>\n                    <Card.Text>{this.props.country}</Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}","import React from 'react';\n\nclass Error extends React.Component {\n    render() {\n        return(\n            <div>\n                <h1>Ooops!!! {this.props.error} <br/> Please reload page</h1>\n            </div>\n        )\n    }\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport './FilterService.css';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { SortUpAlt, SortDownAlt } from 'react-bootstrap-icons';\n\nclass AgeFilterService extends Component {\n\n    sortByYoungestAge = (props) => {\n        return props.sort((a, b) =>  a.dob.age - b.dob.age);\n    }\n\n    sortByOldestAge = (props) => {\n        return props.sort((a, b) =>  b.dob.age - a.dob.age);\n    }\n\n    render() {\n        return( \n            <div className=\"age-filter\">\n                <p>By Age</p>\n                <ButtonGroup aria-label=\"Sort By Age\">\n                    <Button \n                        variant=\"outline-warning\" \n                        onClick={() => this.props.handlerSort(this.sortByYoungestAge(this.props.users))}>\n                        <SortDownAlt />\n                    </Button>\n                    <Button \n                        variant=\"outline-warning\" \n                        onClick={() => this.props.handlerSort(this.sortByOldestAge(this.props.users))}>\n                        <SortUpAlt />\n                    </Button>\n                </ButtonGroup>\n            </div>\n        )\n    }\n}\n\nexport default AgeFilterService;","import React, { Component } from 'react';\nimport './FilterService.css';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { SortUpAlt, SortDownAlt } from 'react-bootstrap-icons';\n\nclass NameFilterService extends Component {\n\n    sortByLastNameUp = (props) => {\n        return props.sort((a, b) =>  a.name.last > b.name.last ? 1 : - 1);\n    }\n\n    sortByLastNameDown = (props) => {\n        return props.sort((a, b) =>  b.name.last < a.name.last ? -1 : 1);\n    }\n\n    render() {\n        return(\n            <div className=\"name-filter\">\n                <p>By Last Name</p>\n                <ButtonGroup aria-label=\"Sort By Name\">\n                    <Button \n                        variant=\"outline-warning\" \n                        onClick={() => this.props.handlerSort(this.sortByLastNameUp(this.props.users))}>\n                        <SortDownAlt />\n                    </Button>\n                    <Button \n                        variant=\"outline-warning\" \n                        onClick={() => this.props.handlerSort(this.sortByLastNameDown(this.props.users))}>\n                        <SortUpAlt />\n                    </Button>\n                </ButtonGroup>\n            </div>\n        )\n    }\n}\n\nexport default NameFilterService;","import React, { Component } from 'react';\nimport './FilterService.css';\n\nclass NameSearch extends Component {\n\n    onNameSearch = (event) => {\n        this.props.handlerNameSearch(event.target.value.toLowerCase());\n    }\n\n    render() {\n        return (\n            <div className=\"name-search\">\n                <p>Search by name</p>\n                <input \n                    type=\"text\" \n                    onChange={this.onNameSearch} />\n            </div>\n        )\n    }\n}\n\nexport default NameSearch;","import React, { Component } from 'react';\nimport './UserList.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nimport UserItem from '../UserItem/UserItem';\nimport Error from '../Error/Error';\nimport AgeFilterService from '../FilterService/AgeFilterService';\nimport NameFilterService from '../FilterService/NameFilterService';\nimport NameSearch from '../FilterService/NameSearch';\n\nexport default class UserList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            hasError: false,\n            error: ''\n        };\n        this.getResource();\n    }\n    \n    \n    getResource = () => {\n        fetch('https://randomuser.me/api/?results=12&nat=DE,GB,AU&page=1&seed=c')\n        .then(data => data.json())\n        .then(data => this.setState({users: data.results}))\n        .catch(err =>  this.setState({hasError: true, error: `${err}` }))\n    }\n\n    handlerSort = (value) => {\n        this.setState({\n            users: value\n        })\n    }\n\n    handlerNameSearch = (value) => {\n        const users = this.state.users;\n\n        if(!value || value.length <= 3) {\n            this.getResource();\n        } \n        else \n        {\n            for (let i = 0; i < users.length; i++) {\n                if (value.length > 1 && users[i].name.first.toLowerCase().includes(value)) {\n                        this.setState({\n                            users: [users[i]]\n                        })\n                    } \n                }\n        }\n    }\n    \n    handlerUserReset = () => {\n\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <Error error={this.state.error} />\n        }\n        return(\n            <Container fluid>\n                <Row>\n                    <Col \n                        className=\"filter\"\n                        xs={3} \n                        md={2}\n                        >\n                        <div className=\"sort\">\n                            <h4>FILTER</h4>\n                            <AgeFilterService \n                                users={this.state.users}\n                                handlerSort={this.handlerSort}\n                            />\n                            <NameFilterService \n                                users={this.state.users}\n                                handlerSort={this.handlerSort}\n                            />\n                            <NameSearch \n                                handlerNameSearch={this.handlerNameSearch}\n                            />\n                            <Button\n                                variant=\"outline-warning\"\n                                onClick={this.getResource}>\n                                reset\n                            </Button>\n                        </div>\n                    </Col>\n                    <Col \n                        className=\"friends-list\" \n                        xs={9} \n                        md={10}>\n                            {this.state.users.map((item, index) => { \n                                return <UserItem\n                                        key={index}\n                                        name={`${item.name.first} ${item.name.last}`}\n                                        image={item.picture.large}\n                                        gender={`${item.gender.toUpperCase()}`} \n                                        age={`Age: ${item.dob.age} years`}\n                                        city={`City: ${item.location.city}`}\n                                        country={`Country: ${item.location.country}`}\n                                        />\n                            })}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from '../Header/Header';\nimport Login from '../Login/Login';\nimport UserList from '../UserList/UserList';\n\n\nclass App extends Component {\n    // getUsers = new UsersService();\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            login: false\n        };\n    }\n\n    handleLogin = (nameValue, loginValue) => {\n        console.log(nameValue, loginValue);\n        this.setState({ name: nameValue })\n        this.setState({ login: loginValue })\n    }\n\n    render() {\n        // if (!this.state.login) {\n        //     return (\n        //         <Login \n        //             handleLogin={this.handleLogin} \n        //             name={this.state.name}\n        //             login={this.state.login}\n        //         />\n        //     )\n        // } else {\n            return (\n                <div className=\"App\">\n                    <Header name={this.state.name}/>\n                    <UserList/>\n                </div>\n            );\n        // }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}